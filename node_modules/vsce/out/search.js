"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var util_1 = require("./util");
var GalleryInterfaces_1 = require("vso-node-api/interfaces/GalleryInterfaces");
var viewutils_1 = require("./viewutils");
var pageSize = 100;
function search(searchText, json, pageNumber) {
    if (json === void 0) { json = false; }
    if (pageNumber === void 0) { pageNumber = 1; }
    var flags = [];
    return util_1.getPublicGalleryAPI()
        .extensionQuery({
        pageSize: pageSize,
        criteria: [
            { filterType: GalleryInterfaces_1.ExtensionQueryFilterType.SearchText, value: searchText },
        ],
        flags: flags,
    })
        .then(function (results) {
        if (json) {
            console.log(JSON.stringify(results, undefined, '\t'));
        }
        else {
            renderSearchView(searchText, results);
        }
    });
}
exports.search = search;
function renderSearchView(searchText, results) {
    if (results === void 0) { results = []; }
    if (!results.length) {
        console.log('No matching results');
        return;
    }
    console.log([
        "Search results:",
        ''
    ].concat(viewutils_1.tableView([
        ['<ExtensionId>', '<Description>']
    ].concat(results.map(function (_a) {
        var publisherName = _a.publisher.publisherName, extensionName = _a.extensionName, shortDescription = _a.shortDescription;
        return [publisherName + '.' + extensionName, shortDescription.replace(/\n|\r|\t/g, ' ')];
    }))), [
        '',
        'For more information on an extension use "vsce show <extensionId>"',
    ]).map(function (line) { return viewutils_1.wordTrim(line.replace(/\s+$/g, '')); })
        .join('\n'));
}

//# sourceMappingURL=search.js.map
